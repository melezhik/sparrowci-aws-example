image:
  - melezhik/sparrow:debian
  
secrets:
  - aws_access_key_id
  - aws_secret_access_key

tasks:
  - 
    name: create-ec2
    default: true
    config:
      name: host_01
      image: ami-0e322da50e0e90e21
    if:
       language: Bash
       code: |
        name=$(config name)
        instance_id=$(aws ec2 describe-instances \
           --filters "Name=tag:Name,Values=$name" \
           | yq ".Reservations | .[0] | .Instances \
           | .[0]| .InstanceId")
        if $instance_id != null; then
           echo "{ \"status\": \"skip\" }" \
           > $cache_root_dir/state.json 
        fi
    language: Raku
    init: |
      if config()<tasks><state><get-sn><state><sn-id> {
        run_task "ec2", %(
          sn => config()<tasks><state><get-sn><state><sn-id>
        );
      } else {
        die "subnet not found!";
      }  
    subtasks:
      - 
         name: ec2
         language: Bash
         code: |
           set -e

           name=$(config name)
           image=$(config image)

           id=$(aws ec2 run-instances \
           --image-id $image \
           --count 1 \
           --instance-type t2.micro  \
           --subnet-id $sn \
           | yq ".Instances | .[0] | .InstanceId")

           aws ec2 create-tags \
            --resources $id \
            --region $region  \
            --tags "Name=$name"
    depends:
      -
         # install aws-cli
         name: install-aws
         priority: 1000
      -
         # create subnet
         name: create-sn
         config:
            sb_name: subnet_01
         queue: aws
         priority: 500
      - 
         # get subnet id
         name: get-sn
         config:
            sb_name: subnet_01
         queue: aws
         priority: 10

  - 
     name: install-aws
     language: Bash
     code: |
      set -e
      sudo apt-get install -y python python-pip
      sudo pip install awscli
      mkdir -p ~/.aws/
      cat << HERE > ~/.aws/config 
      [default]
      region = us-east-1
      output = json
      HERE
      cat << HERE > ~/.aws/credentials  
      [default]
      aws_access_key_id=$aws_access_key_id
      aws_secret_access_key=$aws_secret_access_key
      HERE

      wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O yq
      chmod +x yq
      sudo mv yq /usr/bin/
  - 
     name: create-sn
     config:
        cidr_block: 10.0.0.0/24
        vpc_id: vpc-93c359f7
     language: Raku
     init: |
      run_task "create" unless config()<tasks><get-sn><state><sn-id>;
     subtasks:
      -
        name: create
        language: Bash
        code: |
          set -e

          sb_name=$(config sb_name)
          cidr_block=$(config cidr_block)
          vpc_id=$(config vpc_id)

          aws ec2 create-subnet --vpc-id $vpc_id --cidr-block $cidr_block \
          --tag-specifications ResourceType=subnet,Tags=[{Key=Name,Value=$sb_name}]
     depends:
      -
        name: get-sn
        config:
          sb_name: subnet_01
  - 
     name: get-sn
     language: Bash
     code: |
       set -e
       sb_name=$(config sb_name)

       SubnetId=$(aws ec2 describe-subnets \
       --filters "Name=tag:Name,Values=$sb_name" \
       | yq ".subnets | .[0] | .SubnetId")

       if SubnetId != "null"; then
         echo "{ \"sn-id\": \"$SubnetId\" }" > $cache_root_dir/state.json
       else
         echo "subnet not found"
         echo "{ \"sn-id\": \"\" }" > $cache_root_dir/state.json
       fi  
