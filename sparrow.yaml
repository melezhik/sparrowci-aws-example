image:
  - melezhik/sparrow:debian
  
secrets:
  - aws_access_key_id
  - aws_secret_access_key

tasks:
  - 
    name: create-ec2
    default: true
    config:
      name: host_01
      image: ami-0e322da50e0e90e21
    language: Raku
    init: |
      if config()<tasks><state><get-ec2><state><id> {
        set_stdout("instance already created");
      } else {
        if config()<tasks><state><get-sn><state><sn-id> {
            run_task "ec2", %(
              sn => config()<tasks><state><get-sn><state><sn-id>
            );
        } else {
          die "subnet not found!";
        }  
      }
    subtasks:
      - 
         name: ec2
         language: Bash
         code: |
           set -e

           name=$(config name)
           image=$(config image)

           id=$(aws ec2 run-instances \
           --image-id $image \
           --count 1 \
           --instance-type t2.micro  \
           --subnet-id $sn \
           | yq ".Instances | .[0] | .InstanceId")

           aws ec2 create-tags \
            --resources $id \
            --region $region  \
            --tags "Name=$name"
    depends:
      -
         # install aws-cli
         name: install-aws
         priority: 1000
         queue: aws
      -  # get ec2
         name: get-ec2
         queue: aws
         priority: 700
         config:
          name: host_01
      -
         # create subnet
         name: create-sn
         config:
            sb_name: subnet_01
         queue: aws
         priority: 500
      - 
         # get subnet id
         name: get-sn
         config:
            sb_name: subnet_01
         queue: aws
         priority: 10

  - 
     name: install-aws
     language: Bash
     code: |
      set -e
      sudo apt-get install -y awscli

      mkdir -p ~/.aws/
      cat << HERE > ~/.aws/config 
      [default]
      region = us-east-1
      output = json
      HERE
      cat << HERE > ~/.aws/credentials  
      [default]
      aws_access_key_id=$aws_access_key_id
      aws_secret_access_key=$aws_secret_access_key
      HERE

      set -x
      curl -sfL https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -o yq
      chmod a+x yq
      ls -l yq
      sudo mv yq /usr/bin/yq
      
      cat ~/.aws/config 
  - 
     name: create-sn
     plugin: aws-subnet
     config:
        cidr_block: 10.0.0.0/24
        vpc_id: vpc-93c359f7
        action: create
     if:
      language: Raku
       code: |
        if config()<tasks><get-sn><state><sn-id> {
          update_state %( 
            state => "skip"
          )
        }
     depends:
      -
        name: get-sn
        config:
          sb_name: subnet_01
  - 
     name: get-sn
     plugin: aws-subnet
     config: 
       action: get 
  -
    name: get-ec2
    language: Bash
    code: |
       name=$(config name)
       instance_id=$(aws ec2 describe-instances \
          --filters "Name=tag:Name,Values=$name" \
          | yq ".Reservations | .[0] | .Instances \
          | .[0]| .InstanceId")
       if test "$instance_id" != "null"; then
          echo "{ \"id\": \"$instance_id\" }" \
          > $cache_root_dir/state.json 
       else
          echo "{ \"id\": \"\" }" \
          > $cache_root_dir/state.json 
       fi

